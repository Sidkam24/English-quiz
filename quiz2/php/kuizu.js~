var kei_max = 1;  //最大問題数
var kei2;  //第何問目なのか
var tensu;　//正解数
var rand; // 問題番号
var miss = []; //間違った問題の配列
var sec=0;
var sec2=0;
var min=0;
var flag=0;
var timer;
var tno;
//文末なしの文頭大文字
// var eigo =["Good morning","Hello","Nice to meet you","How are you","Goodbye","I don't know","What date is it today","What day is it today","Good night","How old are you"
//         ,"Where are you from","Good evening","See you","Thank you","I'm sleepy","What time is it now","Here you are"];
//文末なしの文頭小文字
var eigo2 =["good morning","hello","nice to meet you","how are you","goodbye","i don't know","what date is it today","what day is it today","good night","how old are you"
        ,"where are you from","good evening","see you","thank you","i'm sleepy","what time is it now","here you are"];
//文末ありの文頭小文字
// var eigo3 =["good morning.","hello.","nice to meet you.","how are you?","goodbye.","I don't know.","what date is it today?","what day is it today?","good night.","how old are you?"
//         ,"where are you from?","good evening.","see you.","thank you.","I'm sleepy.","what time is it now?","here you are."];
//文末ありの文頭大文字
var eigo4 =["Good morning.","Hello.","Nice to meet you.","How are you?","Goodbye.","I don't know.","What date is it today?","What day is it today?","Good night.","How old are you?"
        ,"Where are you from?","Good evening.","See you.","Thank you.","I'm sleepy.","What time is it now?","Here you are."];
/*var nihongo =["おはよう","こんにちは","はじめまして","お元気ですか？","さようなら","わかりません","今日の日付は何ですか？","今日は何曜日ですか？","おやすみ","何歳ですか？"
        ,"出身はどこですか？","こんばんは","またね！","ありがとう！","眠たいです","今何時ですか？","はい、どうぞ"];*/
var nihongo =["おはよう","こんにちは","はじめまして","お<ruby>元気<rp>(</rp><rt>げんき</rt><rp>)</rp></ruby>ですか？","さようなら","わかりません",
              "<ruby>今日<rp>(</rp><rt>きょう</rt><rp>)</rp></ruby>の<ruby>日付<rp>(</rp><rt>ひづけ</rt><rp>)</rp></ruby>は<ruby>何<rp>(</rp><rt>なん</rt><rp>)</rp></ruby>ですか？",
　　　　　　　 "<ruby>今日<rp>(</rp><rt>きょう</rt><rp>)</rp></ruby>は<ruby>何曜日<rp>(</rp><rt>なんようび</rt><rp>)</rp></ruby>ですか？","おやすみ","<ruby>何歳<rp>(</rp><rt>なんさい</rt><rp>)</rp></ruby>ですか？",
              "<ruby>出身<rp>(</rp><rt>しゅっしん</rt><rp>)</rp></ruby>はどこですか？","こんばんは","またね！","ありがとう！","<ruby>眠<rp>(</rp><rt>ねむ</rt><rp>)</rp></ruby>たいです",
　　　　　　   "<ruby>今何時<rp>(</rp><rt>いまなんじ</rt><rp>)</rp></ruby>ですか？","はい、どうぞ"];

//sessionStorageで値を取得
$(function(){
  if(window.sessionStorage.getItem('examno')) {
      kei2 = parseInt(window.sessionStorage.getItem('examno')); 　//sessionStorageでは数値ではなく文字で返すためparseIntで数値化する
      tensu = parseInt(window.sessionStorage.getItem('correctansno'));
  }
  else {
      kei2 = 1;
      window.sessionStorage.setItem('examno',kei2);
      tensu = 0;
      window.sessionStorage.setItem('correctansno',tensu);
  }

//ダイアログ
function log(){
   $("#dialog").dialog({
     width : 700,
     height : 500,
     autoOpen : true,　
     modal : true,　　//他の操作をできなくするかどうか
     show : ("fadeIn",1500),
     hide : "explode",
     buttons : {
       "START" : function(){
         $(this).dialog('close');
       }
     }
   });
}
log();


function onsei(){  //Web Speech Recognition API
  //音声認識APIのインスタンス生成
  $("#onsei").click(function(){
    var speech = new webkitSpeechRecognition();
    //音声認識APIにパラメータを設定
    speech.lang = "en";　　　　　  // 音声認識を行う言語
    speech.continuous = false;　　// 連続音声の音声認識を行うか
    speech.maxAlternatives = 1;　 // 認識結果候補の個数
    //音声認識APIを開始
    speech.start();
    speech.addEventListener('result',function(e){　//重複を防ぐため
      var text = e.results[0][0].transcript; //認識された「言葉」は「results」配列内にある「transcript」に格納されている
      // for(var j =0; j < eigo2.length; j++){
      //   if(text == eigo2[j]){　//eigo2は文頭が小文字でピリオドも？もない状態。つまり、音声入力の初期値
      //     var text = eigo4[j];　//eigo4は文頭は大文字でピリオドも？もついている状態。
      //   }
      // }
    var text = text.replace(/^[a-z]/, function (val) {
         return val.toUpperCase();
    });
        $("#text").val(text);　//テキスト欄にtextの値を入力
      if(text === "Open"){
        location.href="kuizu2.html";
      }
      else if(text === "Occupation"){
        location.href="occupation2.html";
      }
      else if(text === "Dictionary"){
        window.open("https://ejje.weblio.jp/");
      }
    });
  });
}

function yomiage(hassei){  //Web Speech Synthesis API
  //音声出力APIのインスタンス生成
  var out = new SpeechSynthesisUtterance();
  //音声出力APIにパラメータを設定
  out.voiceURI = 1;      // 出力する音声の種類
  out.volume = 1;        // 出力する音声のボリューム
  out.rate = 0.7;        // 出力する音声の速さ
  out.pitch = 2;         // 出力する音声のピッチ(高さ)
  out.text = hassei;     // 出力する文章
  out.lang = 'en';       // 出力する音声の言語
  //音声出力
  speechSynthesis.speak(out);
}
  onsei();

//timerの設置
function  timer(){
  $("#text").on("keyup",function(){
    if(flag==0){
      start();
      flag=1;
    }
  });
  $("#onsei").on("click",function(){
    if(flag==0){
      start();
      flag=1;
    }
  });
  function start(){
    sec=0;
    min=0;
    $("#clock").html("00:00");
    timer=setInterval(countup,10);
  }
  function countup(){
    sec++;
    if(sec>99){
      sec=0;
      min=min+1;
    }
  	sec_number=("0"+sec).slice(-2);
  	min_number=min;
  $("#clock").html(min_number+"."+sec_number);
  }
}
timer();

function stoptimer(){
  clearInterval(timer);
}

function get(){
  var tno = $("#your_time").text();
  // tno = parseInt(tno.replace(/[^0-9]/g,""));
	$("#nik_sousin").click(function(){
    var val = $("#nik").val();
    if(val==""){
      alert("ニックネームを入力してください");
    }
    else{
		$.get("kuizu.php",{
		    name : val,
			  time : tno
		},function(){
			alert("送信しました");
      $("#nik").val("");
      $("#cong").hide(1000);
		});
  }
	});
}

  $("body").fadeMover();
  $(".miss").hide();　
  $("#cong").hide();
  var max = eigo2.length-1; //配列の長さ(個数)から1引くことで、配列の何番目かを表すことができる。
  var min =0;
  rand = Math.floor(Math.random()*(max+1-min))+min;　//ランダムな数字を取得
  $(".kuizu").html(nihongo[rand]);　//クイズを表示
  $("#monkazu").text(kei2);　//第何問目なのか表示
  $("#kei").text("/"+kei_max);　//最大問題数を表示

  //送信ボタンを押した後
  $("#sousin").click(function(){
       var input = $("#text").val();　//テキストの中身を取得
       input = input.toLowerCase();//文字列の中の大文字を小文字に
       var input2 = input.match(/[\.\?]$/);
       if(input2){
         input = input.replace(/[\.\?!]$/,'');
       }
       if( input === eigo2[rand] ){ //テキストの中身と答えが一致するなら
          tensu++;　//tensuの変数に１増やす
          $("#tensu").text(tensu);　//点数を表示する
          $("#batu").css("display","none");　//×を非表示
          $("#maru").css("display","block");　//〇を表示
          var maru2 = $("#maru2");  //〇の効果音
          maru2[0].currentTime = 0;　//０秒からスタート
          maru2[0].play();　//音を鳴らす　jQueryオブジェクトは配列のような形で取得されるため、get(0)などを使用して、「一番最初の要素」を取得した上で命令をしないといけない。
          $("#next").prop('disabled',false);　//次へを押せるようにする
          $("#sousin").prop('disabled',true);　//送信を押せなくする
        }
        else{　//答えと違っているなら
           $(".kotae").text(eigo4[rand]);　//正しい答えを表示
           $("#maru").css("display","none");　 // noneにしないと表示が被る
           $("#batu").css("display","block");　//×を表示
           var batu2 = $("#batu2");　 //☓の効果音
           batu2.get(0).currentTime = 0; 　// batu2[0].currentTime　でもよい
           batu2.get(0).play(); 　// batu2[0].play()　でもよい
           $("#next").prop('disabled',false);　//「次へ」ボタンを押せるようにする
           $("#sousin").prop('disabled',true);　//「送信]ボタンを押せなくする。
           yomiage(eigo4[rand]);　//答えを読み上げる
           miss.push(eigo4[rand]);　//間違った問題を miss の配列に入れる。
        }
      //  eigo.splice(rand,1);
        eigo2.splice(rand,1);
    //    eigo3.splice(rand,1);
        eigo4.splice(rand,1);　//配列からその問題を削除
        nihongo.splice(rand,1);
  });

  //リセットボタン
  function reset(){
    $("#reset").click(function(){　//リセットボタンをクリックしたとき
        location.reload();　//リロードを行う
    });
  }




　//次へボタンを押した後
  $("#next").click(function(){
      kei2 += 1;
      var max = eigo2.length-1;　//配列から削除したのでもっかい作成
      var min =0;
      rand = Math.floor(Math.random()*(max+1-min))+min;　//ランダムな数字を取得
      if(kei2-1 < kei_max){
         $(".kuizu").html(nihongo[rand]);　//問題表示
         $("#monkazu").text(kei2);　//第何問目なのかを表示
      }
      if(tensu === kei_max){
         alert("満点です！");
         $("#next").prop('disabled',true);　//次へボタンを押せなくする
         $("#reset").prop('disabled',false);
         $("#cong").show(1000);
         stoptimer();
         var your_time = $("#clock").text();
         $("#your_time").text(your_time);
         get();
         reset();
      }
      else if(kei2-1 === kei_max){
         var your_time = $("#clock").text();
         alert(kei2-1+" "+"問中"+" "+tensu+" "+"問正解しました!\n"+"あなたのタイムは　"+your_time);
         $("#next").prop('disabled',true);　//次へボタンを押せなくする
         for( var m = 0; m < miss.length ; m++){　//間違った問題を表示
            $(".miss"+m).html(miss[m]);
            yomiage(miss[m]);　//間違った問題を読み上げる
         }
         $(".miss").show("explode",1500);　//間違った問題を表示
         $(".miss").draggable({　//間違った問題をドラッグ可能に
           containment: '#layerImage'　//layerImageの範囲まで移動可能
         });
         $("#reset").prop('disabled',false);　//リセットボタンを押せるようにする
         stoptimer();
         reset();　
      }
      else{
         $(".kotae").text("");　//答えの表示を非表示にする
         $("#text").val("");　//テキストの中身を空にする
         $("#next").prop('disabled',true);　//次へボタンを押せなくする
         $("#sousin").prop('disabled',false);　//送信ボタンを押せるようにする
         $("#batu").hide("explode",500);　//×を非表示
         $("#maru").hide("explode",500);　//〇を非表示
         onsei();
      }
　 });

//問題一覧
for(var i=0 ; i < eigo2.length ; i++){　//問題一覧を順番に表示
  $(".eigo").append('<p>'+eigo4[i]+'</p>');
  $(".nihon").append('<p>'+nihongo[i]+'</p>');
}
   $(".eigo > p")
    .mouseenter(function(){　//マウスがブロックの中に入ったら
       $(this).css("font-size","120%");
       $(this).css("background-color","rgba(0,0,255,0.4)");
   })
    .mouseleave(function(){　//マウスがブロックの外に出たら
       $(this).css("font-size","100%");
       $(this).css("background-color","white");
   })
    .click(function(){　//クリックしたら
       var practice = $(this).text();
       yomiage(practice);
   });

  //メニューの実装
 $("#acmenu dt").on("click", function() {
  $("#acmenu dd").slideToggle();
 });
 $("#acmenu2 dt").on("click", function() {
  $("#acmenu2 dd").slideToggle();
 });
 $("#acmenu3 dt").on("click", function() {
  $("#acmenu3 dd").slideToggle();
 });
 $("dd,dt")
  .mouseenter(function(){
     $(this).css("background-color","rgba(0,0,255,0.4)");　//青に
 })
  .mouseleave(function(){
     $(this).css("background-color","#033560");　//元の色に
  });



});
